<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
    <properties resource="mybatis/mysql.properties"/>
    <settings>
        <!--未启用缓存 -->
        <!--<setting name="cacheEnabled" value="false"/>-->
        <!--自动生成主键-->
        <setting name="useGeneratedKeys" value="true"/>
        <!--默认执行器类型 org.apache.ibatis.session.ExecutorType-->
        <setting name="defaultExecutorType" value="REUSE"/>
        <!--有效值：SLF4J|LOG4J|LOG4J2|JDK_LOGGING|COMMONS_LOGGING|STDOUT_LOGGING|NO_LOGGING
        默认值：Not set-->
        <setting name="logImpl" value="STDOUT_LOGGING"/>
    </settings>
    <typeAliases>
        <!-- 别名方式1，一个一个的配置 type中放置的是类的全路径，alias中放置的是类别名
        <typeAliase type="com.mybatis.demo.Entity.User" alias="UserBean"/> -->
        <!-- 别名方式2，自动扫描，将JAVA类的类名作为类的类别名 -->
        <!--<package name="com.mybatis.demo.Entity"/>-->
        <typeAlias alias="User" type="mybatis.pojo.User"/>
    </typeAliases>

    <!--插件-->
    <plugins>
        <!---->
        <plugin interceptor="mybatis.interceptor.ExecutorInterceptor">
            <property name="name" value="ExecutorInterceptor"/>
        </plugin>
        <plugin interceptor="mybatis.interceptor.ParameterHandlerInterceptor">
            <property name="name" value="ParameterHandlerInterceptor"/>
        </plugin>
        <plugin interceptor="mybatis.interceptor.ResultSetHandlerInterceptor">
            <property name="name" value="ResultSetHandlerInterceptor"/>
        </plugin>
        <plugin interceptor="mybatis.interceptor.StatementHandlerInterceptor">
            <property name="name" value="StatementHandlerInterceptor"/>
        </plugin>
    </plugins>

    <!-- 配置mybatis运行环境 -->
    <environments default="development">
        <environment id="development">
            <!-- type="JDBC" 代表使用JDBC的提交和回滚来管理事务 -->
            <transactionManager type="JDBC"/>

            <!--1.0 UNPOOLED 表示不支持数据源连接池 -->
            <!--<dataSource type="POOLED">-->
            <!--<property name="driver" value="${jdbc.driver}"/>-->
            <!--<property name="url" value="${jdbc.databaseurl}"/>-->
            <!--<property name="username" value="${jdbc.username}"/>-->
            <!--<property name="password" value="${jdbc.password}"/>-->
            <!--&lt;!&ndash;<property name="driver.encoding" value="UTF8"/>&ndash;&gt;-->
            <!--</dataSource>-->

            <!-- mybatis提供了3种数据源类型，分别是：POOLED,UNPOOLED,JNDI -->
            <!--2.0 POOLED 表示支持JDBC数据源连接池 -->
            <dataSource type="POOLED">
                <property name="driver" value="${jdbc.driver}"/>
                <property name="url" value="${jdbc.databaseurl}"/>
                <property name="username" value="${jdbc.username}"/>
                <property name="password" value="${jdbc.password}"/>
                <!--<property name="driver.encoding" value="UTF8"/>-->
            </dataSource>


            <!--3.0 JNDI 表示支持外部数据源连接池 -->
            <!--<dataSource type="JNDI ">-->
            <!--<property name="initial_context " value="${jdbc.databaseurl}"/>-->
            <!--<property name="data_source " value="${jdbc.username}"/>-->
            <!--<property name="env.encoding" value="UTF8"/>-->
            <!--</dataSource>-->

        </environment>
    </environments>


    <mappers>
        <!-- 映射文件方式1，一个一个的配置-->
        <!--<mapper resource="mapper/UserMapper.xml"/>-->

        <!-- 映射文件方式11，使用相对于类路径的资源引用 -->
        <!--<mapper resource="org/mybatis/builder/AuthorMapper.xml"/>-->

        <!-- 映射文件方式12，使用完全限定资源定位符（URL） -->
        <!--<mapper url="file:///var/mappers/AuthorMapper.xml"/>-->

        <!-- 映射文件方式13，使用映射器接口实现类的完全限定类名 -->
        <!--<mapper class="mybatis.mapper.EmpMapper"/>-->


        <!-- 映射文件方式2，自动扫描包内的Mapper接口与配置文件(将包内的映射器接口实现全部注册为映射器) -->
        <package name="mybatis.mapper"/>
    </mappers>
</configuration>